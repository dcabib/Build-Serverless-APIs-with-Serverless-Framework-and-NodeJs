service: sls-api # NOTE: update this with your service name

custom:
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

provider:
  name: aws
  runtime: nodejs8.10
  region: ap-south-1
  environment:
    JOBS_TABLE: ${self:service}-${self:opt, self:provider.stage}-jobs
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"

plugins:
  - serverless-offline
  - serverless-dynamodb-local

functions:
  hello:
    handler: handler.hello

  jobs:
    handler: src/jobs/handler.handler

  listJobs:
    handler: src/jobs/list.handler
    events:
      - http:
          method: GET
          path: /jobs

  createJob:
    handler: src/jobs/create.handler
    events:
      - http:
          method: POST
          path: /jobs

  getJob:
    handler: src/jobs/findone.handler
    events:
      - http:
          method: GET
          path: /jobs/{id}
          request:
            parametres:
              id: true

  deleteJob:
      handler: src/jobs/delete.handler
      events:
        - http:
            method: DELETE
            path: /jobs/{id}
            request:
              parametres:
                id: true

  updateJob:
    handler: src/jobs/update.handler
    events:
      - http:
          method: PUT
          path: /jobs/{id}
          request:
            parametres:
              id: true
resources:
  Resources:
    JobsDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:provider.environment.JOBS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
